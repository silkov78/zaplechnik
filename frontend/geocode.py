import json
import requests
import time

INPUT_FILE = 'frontend/data/camp_site.geojson'  
OUTPUT_FILE = 'frontend/data/camp_site_geocoded.geojson' 
USER_AGENT = 'ivannxs7@gmail.com'

def get_location_details(lon, lat, user_agent):

    url = f"https://nominatim.openstreetmap.org/reverse?format=jsonv2&lon={lon}&lat={lat}&accept-language=be"
    
    headers = {
        'User-Agent': user_agent
    }
    
    try:
        response = requests.get(url, headers=headers, timeout=10)
        response.raise_for_status()
        data = response.json()
        
        address = data.get('address', {})
        district = address.get('county') 
        region = address.get('state')   
        
        return district, region
        
    except requests.exceptions.RequestException as e:
        print(f"‚ö†Ô∏è –ü–∞–º—ã–ª–∫–∞ –∑–∞–ø—ã—Ç—É –¥–∞ Nominatim: {e}")
        return None, None
    except json.JSONDecodeError:
        print("Ô∏è‚ö†Ô∏è –ü–∞–º—ã–ª–∫–∞ –¥—ç–∫–∞–¥–∞–≤–∞–Ω–Ω—è JSON –∞–¥–∫–∞–∑—É.")
        return None, None

def main():
    try:
        with open(INPUT_FILE, 'r', encoding='utf-8') as f:
            geojson_data = json.load(f)
    except FileNotFoundError:
        print(f"üö® –ü–∞–º—ã–ª–∫–∞: –§–∞–π–ª '{INPUT_FILE}' –Ω–µ –∑–Ω–æ–π–¥–∑–µ–Ω—ã. "
              f"–ü–µ—Ä–∞–∫–∞–Ω–∞–π—Ü–µ—Å—è, —à—Ç–æ —ë–Ω –∑–Ω–∞—Ö–æ–¥–∑—ñ—Ü—Ü–∞ —û —Ç–æ–π –∂–∞ –¥—ã—Ä—ç–∫—Ç–æ—Ä—ã—ñ, —à—Ç–æ —ñ —Å–∫—Ä—ã–ø—Ç.")
        return
    except json.JSONDecodeError:
        print(f"üö® –ü–∞–º—ã–ª–∫–∞: –ù–µ–º–∞–≥—á—ã–º–∞ –ø—Ä–∞—á—ã—Ç–∞—Ü—å JSON –∑ —Ñ–∞–π–ª–∞ '{INPUT_FILE}'. "
              f"–ü—Ä–∞–≤–µ—Ä—Ü–µ, —Ü—ñ –ø—Ä–∞–≤—ñ–ª—å–Ω—ã —û —ñ–º —Ñ–∞—Ä–º–∞—Ç.")
        return

    print(f"‚úÖ –§–∞–π–ª '{INPUT_FILE}' –ø–∞—Å–ø—è—Ö–æ–≤–∞ –∑–∞–≥—Ä—É–∂–∞–Ω—ã.")
    
    features = geojson_data.get('features', [])
    total_features = len(features)
    
    if not features:
        print("–§–∞–π–ª –Ω–µ —û—Ç—Ä—ã–º–ª—ñ–≤–∞–µ –Ω—ñ–≤–æ–¥–Ω–∞–π —Ñ—ñ—á—ã (features).")
        return

    print(f"–ü–∞—á—ã–Ω–∞—é –∞–ø—Ä–∞—Ü–æ—û–∫—É {total_features} –∞–±'–µ–∫—Ç–∞—û...")

    for i, feature in enumerate(features):
        properties = feature.get('properties', {})
        geometry = feature.get('geometry', {})
        
        if geometry and geometry.get('type') == 'Point':
            coordinates = geometry.get('coordinates')
            if not coordinates or len(coordinates) < 2:
                print(f"‚è© –ü—Ä–∞–ø—É—Å–∫–∞–µ–º –∞–±'–µ–∫—Ç {i+1}/{total_features}: –∞–¥—Å—É—Ç–Ω—ñ—á–∞—é—Ü—å –∫–∞–∞—Ä–¥—ã–Ω–∞—Ç—ã.")
                continue

            lon, lat = coordinates
            
            print(f"‚öôÔ∏è  –ê–ø—Ä–∞—Ü–æ—û–≤–∞—é –∞–±'–µ–∫—Ç {i+1}/{total_features} (–ö–∞–∞—Ä–¥—ã–Ω–∞—Ç—ã: {lat}, {lon})...")
            
            district, region = get_location_details(lon, lat, USER_AGENT)
            
            if district:
                properties['district:be'] = district
                print(f"   -> –†–∞—ë–Ω: {district}")
            else:
                print("   -> –ù–µ —û–¥–∞–ª–æ—Å—è –≤—ã–∑–Ω–∞—á—ã—Ü—å —Ä–∞—ë–Ω.")

            if region:
                properties['region:be'] = region
                print(f"   -> –í–æ–±–ª–∞—Å—Ü—å: {region}")
            else:
                print("   -> –ù–µ —û–¥–∞–ª–æ—Å—è –≤—ã–∑–Ω–∞—á—ã—Ü—å –≤–æ–±–ª–∞—Å—Ü—å.")
            
            time.sleep(1) 
        else:
            print(f"‚è© –ü—Ä–∞–ø—É—Å–∫–∞–µ–º –∞–±'–µ–∫—Ç {i+1}/{total_features}: –≥–µ–∞–º–µ—Ç—Ä—ã—è –Ω–µ –∑'—è—û–ª—è–µ—Ü—Ü–∞ –ø—É–Ω–∫—Ç–∞–º (Point).")

    try:
        with open(OUTPUT_FILE, 'w', encoding='utf-8') as f:
            json.dump(geojson_data, f, ensure_ascii=False, indent=2)
        print(f"\nüéâ –ê–ø—Ä–∞—Ü–æ—û–∫–∞ –∑–∞–≤–µ—Ä—à–∞–Ω–∞! –í—ã–Ω—ñ–∫ –∑–∞—Ö–∞–≤–∞–Ω—ã —û —Ñ–∞–π–ª–µ '{OUTPUT_FILE}'.")
    except IOError:
        print(f"üö® –ü–∞–º—ã–ª–∫–∞: –ù–µ–º–∞–≥—á—ã–º–∞ –∑–∞–ø—ñ—Å–∞—Ü—å –¥–∞–Ω—ã—è —û —Ñ–∞–π–ª '{OUTPUT_FILE}'.")

if __name__ == '__main__':
    main()